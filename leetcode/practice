var lengthOfLongestSubstring = function(s) {
    if (s.length <=1) return s.length
    let repeat = new Set()
    let arr = []
    let temp = []
    for(let i =0; i< s.length; i++){

        if (repeat.has(s[i])){
            repeat = new Set()
            if(arr.length === 0 || (temp.length > arr[arr.length -1].length)) {
                arr.push(temp)
            }
            temp = []
        }
        temp.push(s[i])
        repeat.add(s[i])
        console.log(s[i])
        console.log(temp)

    }
    if(arr.length ===0 || (temp.length > arr[arr.length -1].length)) return temp.length
    console.log(arr)
    console.log("arr")
    return arr[arr.length -1].length
};
function ListNode(val) {
     this.val = val;
     this.next = null;
  }
var rotateRight = function(head, k) {
    if(k===0) return head;
    if(head === null || head.next === null) return head;
    let newHead = head;
    let tail = null
    let length = 1
    while(head.next!==null){
        head = head.next;
        length ++;
    }
    tail = head;
    let temp = null;
        console.log("k", k)

    k = k%length;
    console.log("length", length)
    console.log("k", k)
    for(let i =1; i <= k; i++){
        temp = newHead;
        newHead = newHead.next;

        temp.next = null;
        tail.next = temp;
        tail = tail.next;

    }
    return newHead;
};

let node1 = new ListNode(1)
let node2 = new ListNode(2)
let node3 = new ListNode(3)
// let node4 = new ListNode(4)
// let node5 = new ListNode(5)

node1.next = node2;
node2.next = node3;
// node3.next = node4;
// node4.next = node5;
rotateRight(node1,2000000000)
let node1 = new ListNode(1)
let node2 = new ListNode(2)
let node3 = new ListNode(3)
let node4 = new ListNode(4)
let node5 = new ListNode(5)

node1.next = node2;
node2.next = node3;
node3.next = node4;
node4.next = node5;
