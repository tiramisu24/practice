public class Solution {
    public int maxProduct(String[] words) {
      String[] arr = sortStringArr(words);
      int biggest = 0;
      for(int i =0; i < arr.length; i++){
            for(int j =i+1; j <arr.length;j++){
                if(isValid(arr[i], arr[j])){
                    int product = arr[i].length() * arr[j].length();
                    if(biggest < product) biggest = product;
                }
        }
      }
      return biggest;
    }

    public boolean isValid(String word1,String word2){
        Set<Character> seen = new HashSet<Character>();

        for(int i = 0; i <word1.length(); i++){
            seen.add(word1.charAt(i));
        }
        for(int i =0; i<word2.length();i++){
            if(seen.contains(word2.charAt(i))) return false;
        }
        return true;
    }
    public String[] sortStringArr(String[] words){
      String[] res = new String[words.length];
      for(int i = 0; i < words.length; i++){
        char[] letters = words[i].toCharArray();
        Arrays.sort(letters);
        String sorted = new String(letters);

        res[i] = sorted;
      }
      return res;
    }
}
