Write a program to sort a stack in ascending order. You should not make any assumptions
about how the stack is implemented. The following are the only functions that
should be used to write this program: push | pop | peek | isEmpty

def Stack
  def initialize
    @stack = []
  end


  def push(val)
    @stack.push(val)
  end

  def pop
    @stack.pop()
  end

  def peek
    @stack[0]
  end

  def isEmpty
    @stack.empty?
  end

  def sort
    index_stack = sorted_stack
    sorted_stack.each_with_idx do |num, idx|
      num.times do
        @stack.push(idx)
      end
    end

    @stack
  end

  def sorted_stack
    sorted_stack = []
    until isEmpty
      val = pop()
      last_val = sorted_stack.length() -1
      if sorted_stack.empty?
        sorted_stack.concat(Array.new(val+1))
      elsif val > last_val
        sorted_stack.concat(Array.new(val-last_val +1))
      end
      sorted_stack[val] +=1
    end
    sorted_stack
  end




end
